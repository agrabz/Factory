{"abstract":[{"type":"text","text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"},"sections":[],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/sharedcontainer"]}],"relationshipsSections":[{"title":"Inherits From","kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","doc:\/\/FactoryKit\/s8SendableP"]},{"title":"Conforming Types","kind":"relationships","type":"conformingTypes","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"]}],"topicSections":[{"title":"Instance Methods","anchor":"Instance-Methods","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.method"],"generated":true},{"title":"Type Properties","anchor":"Type-Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/shared"],"generated":true},{"title":"Type Methods","anchor":"Type-Methods","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.type.method"],"generated":true}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","text":"ManagedContainer","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit16ManagedContainerP"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Here’s an example of reaching out to a Container’s shared instance for dependency resolution."}],"type":"paragraph"},{"code":["class ContentViewModel {","    let service: MyServiceType = Container.shared.service()","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The default "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"},{"type":"text","text":" provided is a SharedContainer. It can be used in both roles as needed."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See "},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","type":"reference","isActive":true},{"type":"text","text":" for more information."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"metadata":{"roleHeading":"Protocol","externalID":"s:10FactoryKit15SharedContainerP","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"symbolKind":"protocol","role":"symbol","modules":[{"name":"FactoryKit"}],"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"title":"SharedContainer"},"references":{"doc://FactoryKit/documentation/FactoryKit/SharedContainer/shared":{"abstract":[{"type":"text","text":"Defines a single “shared” container for that container type."}],"role":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/shared","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"url":"\/documentation\/factorykit\/sharedcontainer\/shared","title":"shared","required":true},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","url":"\/documentation\/factorykit\/sharedcontainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"type":"topic","title":"SharedContainer","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Containers":{"abstract":[{"type":"text","text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?"}],"role":"article","title":"Containers","type":"topic","kind":"article","url":"\/documentation\/factorykit\/containers","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer/preview(_:)-swift.type.method":{"abstract":[{"type":"text","text":"Defines a preview convenience function to allow easy shared container transformations in SwiftUI Previews."}],"role":"symbol","title":"preview(_:)","type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preview","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EmptyView","preciseIdentifier":"s:7SwiftUI9EmptyViewV","kind":"typeIdentifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.type.method","url":"\/documentation\/factorykit\/sharedcontainer\/preview(_:)-swift.type.method"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"type":"topic","title":"ManagedContainer","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","url":"\/documentation\/factorykit\/managedcontainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/Container":{"abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/container","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"role":"symbol","title":"Container"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer/preview(_:)-swift.method":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preview","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"EmptyView","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9EmptyViewV"}],"type":"topic","kind":"symbol","role":"symbol","title":"preview(_:)","abstract":[{"type":"text","text":"Defines a preview convenience function to allow easy container transformations in SwiftUI Previews."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.method","url":"\/documentation\/factorykit\/sharedcontainer\/preview(_:)-swift.method"},"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP"}}}