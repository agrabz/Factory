{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"inlineContent":[{"text":"This can come in handy when you need to perform some sort of cleanup, but you don’t want to resolve","type":"text"},{"text":" ","type":"text"},{"text":"the property wrapper instance if it hasn’t already been resolved.","type":"text"}],"type":"paragraph"},{"syntax":"swift","code":["deinit {","    $myService.resolvedOrNil()?.cleanup()","}"],"type":"codeListing"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"roleHeading":"Instance Method","title":"resolvedOrNil()","externalID":"s:10FactoryKit12LazyInjectedV13resolvedOrNilxSgyF","modules":[{"name":"FactoryKit"}],"role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/resolvedOrNil()"},"abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/lazyinjected\/resolvedornil()"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected"]]},"sections":[],"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/LazyInjected/resolvedOrNil()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected\/resolvedOrNil()","kind":"symbol","url":"\/documentation\/factorykit\/lazyinjected\/resolvedornil()","abstract":[{"type":"text","text":"Projected function returns resolved instance if it exists."}],"title":"resolvedOrNil()","role":"symbol","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/LazyInjected":{"kind":"symbol","title":"LazyInjected","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"LazyInjected"}],"abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type the first time the wrapped value is requested.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"LazyInjected"}],"url":"\/documentation\/factorykit\/lazyinjected","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/LazyInjected"}}}