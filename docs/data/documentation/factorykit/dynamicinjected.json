{"topicSections":[{"title":"Initializers","generated":true,"anchor":"Initializers","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-8b8lt","doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-m0lr"]},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/projectedValue","doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/wrappedValue"]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DynamicInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using"},{"type":"text","text":" "},{"type":"text","text":"EnvironmentObject in SwiftUI."}]},{"code":["class MyViewModel {","   @DynamicInjected(\\.myService) var service1","   @DynamicInjected(\\MyCustomContainer.myService) var service2","}"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The provided keypath resolves to a Factory definition on the "},{"type":"codeVoice","code":"shared"},{"type":"text","text":" container required for each Container type."},{"type":"text","text":" "},{"type":"text","text":"The short version of the keyPath resolves to the default container, while the expanded version"},{"type":"text","text":" "},{"type":"text","text":"allows you to point an instance of your own custom container type."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The @DynamicInjected property wrapper’s Factory will be resolved on each and every ","type":"text"},{"inlineContent":[{"type":"text","text":"access"}],"type":"strong"},{"text":".","type":"text"}]}],"type":"aside","style":"important","name":"Important"},{"type":"paragraph","inlineContent":[{"text":"In the above example the referenced dependencies will be resolved and acquired each and every time one of the","type":"text"},{"text":" ","type":"text"},{"text":"properties are accessed.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the dependency is stateless this shouldn’t be an issue. If the dependency needs to maintain state, however,"},{"type":"text","text":" "},{"type":"text","text":"then it probably needs to be cached using one of Factory’s caching mechanisms."}]},{"code":["extension Container {","    var myService: Factory<MyServiceType> {","        self { MyService() }.cached","    }","}"],"syntax":"swift","type":"codeListing"}]}],"abstract":[{"type":"text","text":"Convenience property wrapper takes a factory and resolves an instance of the desired type."}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/FactoryKit\/s8SendableP"]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"modules":[{"name":"FactoryKit"}],"roleHeading":"Structure","title":"DynamicInjected","symbolKind":"struct","externalID":"s:10FactoryKit15DynamicInjectedV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/dynamicinjected"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"references":{"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/wrappedValue":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/wrappedValue","title":"wrappedValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"text":"Manages the wrapped dependency.","type":"text"}],"url":"\/documentation\/factorykit\/dynamicinjected\/wrappedvalue","kind":"symbol","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/projectedValue":{"role":"symbol","url":"\/documentation\/factorykit\/dynamicinjected\/projectedvalue","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"projectedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"projectedValue","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/projectedValue","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}]},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/init(_:)-m0lr":{"url":"\/documentation\/factorykit\/dynamicinjected\/init(_:)-m0lr","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Container","preciseIdentifier":"s:10FactoryKit9ContainerC"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"title":"init(_:)","abstract":[{"text":"Initializes the property wrapper. The dependency is resolved on access.","type":"text"}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-m0lr","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected":{"title":"DynamicInjected","type":"topic","abstract":[{"text":"Convenience property wrapper takes a factory and resolves an instance of the desired type.","type":"text"}],"url":"\/documentation\/factorykit\/dynamicinjected","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DynamicInjected","kind":"identifier"}],"navigatorTitle":[{"text":"DynamicInjected","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/DynamicInjected/init(_:)-8b8lt":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"C"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"KeyPath","preciseIdentifier":"s:s7KeyPathC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"C"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">>)"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/DynamicInjected\/init(_:)-8b8lt","kind":"symbol","abstract":[{"type":"text","text":"Initializes the property wrapper. The dependency is resolved on access."}],"title":"init(_:)","url":"\/documentation\/factorykit\/dynamicinjected\/init(_:)-8b8lt","type":"topic"},"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/FactoryKit\/s8SendableP","type":"unresolvable"}}}