{"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Initializer","platforms":[{"deprecated":false,"unavailable":false,"beta":false,"name":"iOS","introducedAt":"14.0"},{"deprecated":false,"unavailable":false,"beta":false,"name":"macOS","introducedAt":"11.0"},{"deprecated":false,"unavailable":false,"beta":false,"name":"tvOS","introducedAt":"14.0"},{"deprecated":false,"unavailable":false,"beta":false,"name":"watchOS","introducedAt":"7.0"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:10FactoryKit14InjectedObjectVyACyxGxcfc","title":"init(_:)","role":"symbol","symbolKind":"init","conformance":{"constraints":[{"type":"codeVoice","code":"T"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ObservableObject"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"FactoryKit","modules":[{"name":"FactoryKit"}]},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject"]]},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","kind":"attribute","preciseIdentifier":"s:ScM"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath.","type":"text"},{"text":" ","type":"text"},{"text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified","type":"text"}]}]}],"references":{"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/InjectedObject/init(_:)-5is4r":{"kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"T","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ObservableObject","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","role":"symbol","abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"title":"init(_:)","url":"\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://FactoryKit/documentation/FactoryKit/InjectedObject":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedObject","kind":"identifier"}],"title":"InjectedObject","role":"symbol","navigatorTitle":[{"text":"InjectedObject","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Immediate injection property wrapper for SwiftUI ObservableObjects.","type":"text"}],"url":"\/documentation\/factorykit\/injectedobject"}}}