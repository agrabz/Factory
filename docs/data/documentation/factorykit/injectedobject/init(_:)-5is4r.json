{"kind":"symbol","identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@"},{"preciseIdentifier":"s:ScM","kind":"attribute","text":"MainActor"},{"kind":"text","text":" "},{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath."},{"type":"text","text":" "},{"type":"text","text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified"}],"type":"paragraph"}]}],"sections":[],"metadata":{"modules":[{"name":"FactoryKit"}],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"title":"init(_:)","symbolKind":"init","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"T","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ObservableObject","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"extendedModule":"FactoryKit","externalID":"s:10FactoryKit14InjectedObjectVyACyxGxcfc","roleHeading":"Initializer","platforms":[{"introducedAt":"14.0","unavailable":false,"name":"iOS","deprecated":false,"beta":false},{"introducedAt":"11.0","unavailable":false,"name":"macOS","deprecated":false,"beta":false},{"introducedAt":"14.0","unavailable":false,"name":"tvOS","deprecated":false,"beta":false},{"introducedAt":"7.0","unavailable":false,"name":"watchOS","deprecated":false,"beta":false}],"role":"symbol"},"abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"variants":[{"paths":["\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject"]]},"references":{"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/InjectedObject/init(_:)-5is4r":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"url":"\/documentation\/factorykit\/injectedobject\/init(_:)-5is4r","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"ObservableObject","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject\/init(_:)-5is4r","type":"topic","role":"symbol","abstract":[{"text":"Simple initializer with passed parameter bypassing injection.","type":"text"}],"title":"init(_:)"},"doc://FactoryKit/documentation/FactoryKit/InjectedObject":{"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObject","url":"\/documentation\/factorykit\/injectedobject","title":"InjectedObject","type":"topic","navigatorTitle":[{"kind":"identifier","text":"InjectedObject"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"InjectedObject"}],"abstract":[{"type":"text","text":"Immediate injection property wrapper for SwiftUI ObservableObjects."}]}}}