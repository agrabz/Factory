{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/scopeOnParameters"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"The behavior can be changed with the ","type":"text"},{"code":".scopeOnParameters","type":"codeVoice"},{"text":" modifier.","type":"text"}],"type":"paragraph"},{"code":["var parameterService: ParameterFactory<Int, ParameterService> {","    self { ParameterService(value: $0) }.scopeOnParameters.cached","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"The passed parameter must be Hashable for this modifier to appear and for the per-parameter caching functionality to occur."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"symbol","externalID":"s:10FactoryKit0A9ModifyingPAASH1PRpzrlE17scopeOnParametersxvp","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"P"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}]},"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"scopeOnParameters"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"modules":[{"name":"FactoryKit"}],"extendedModule":"FactoryKit","roleHeading":"Instance Property","title":"scopeOnParameters","symbolKind":"property"},"variants":[{"paths":["\/documentation\/factorykit\/factorymodifying\/scopeonparameters"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"kind":"symbol","abstract":[{"type":"text","text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are"},{"type":"text","text":" "},{"type":"text","text":"passed on future requests."}],"references":{"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/scopeOnParameters":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/scopeOnParameters","type":"topic","abstract":[{"type":"text","text":"By default, ParameterFactory scopes will cache the first requested value and then return that value, even if other values are"},{"type":"text","text":" "},{"type":"text","text":"passed on future requests."}],"role":"symbol","url":"\/documentation\/factorykit\/factorymodifying\/scopeonparameters","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"P"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scopeOnParameters","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","title":"scopeOnParameters"},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"abstract":[{"type":"text","text":"Public protocol with functionality common to all Factoryâ€™s. Used to add scope and decorator modifiers to Factory."}],"title":"FactoryModifying","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factorykit\/factorymodifying","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}]}}}