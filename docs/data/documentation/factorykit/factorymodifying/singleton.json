{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"codeListing","syntax":"swift","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/factorymodifying\/singleton"]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/singleton","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","isActive":true},{"type":"text","text":"."}],"kind":"symbol","metadata":{"modules":[{"name":"FactoryKit"}],"symbolKind":"property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","externalID":"s:10FactoryKit0A9ModifyingPAAE9singletonxvp","roleHeading":"Instance Property","title":"singleton","extendedModule":"FactoryKit"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying"]]},"references":{"doc://FactoryKit/documentation/FactoryKit/FactoryModifying":{"abstract":[{"type":"text","text":"Public protocol with functionality common to all Factory’s. Used to add scope and decorator modifiers to Factory."}],"title":"FactoryModifying","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying","navigatorTitle":[{"text":"FactoryModifying","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factorykit\/factorymodifying","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FactoryModifying","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/scope\/singleton-swift.class","role":"symbol","title":"Scope.Singleton","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"navigatorTitle":[{"text":"Singleton","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/FactoryModifying/singleton":{"role":"symbol","url":"\/documentation\/factorykit\/factorymodifying\/singleton","title":"singleton","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/FactoryModifying\/singleton","type":"topic","kind":"symbol"}}}