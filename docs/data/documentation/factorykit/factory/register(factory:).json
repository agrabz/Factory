{"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/register(factory:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/factory\/register(factory:)"]}],"kind":"symbol","sections":[],"abstract":[{"text":"Registers a new factory closure capable of producing an object or service of the desired type.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"]]},"metadata":{"symbolKind":"method","externalID":"s:10FactoryKit0A0V8register7factoryACyxGxyYbYAc_tF","modules":[{"name":"FactoryKit"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit04VoidA4Typea","text":"VoidFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"register(factory:)","role":"symbol","roleHeading":"Instance Method"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"register"},{"kind":"text","text":"("},{"kind":"externalParam","text":"factory"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" "},{"kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/VoidFactoryType","text":"VoidFactoryType","preciseIdentifier":"s:10FactoryKit04VoidA4Typea"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This factory overrides the original factory closure and clears the associated scope so that the next time this factory is resolved"},{"type":"text","text":" "},{"type":"text","text":"Factory will evaluate the new closure and return an instance of the newly registered object instead."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Here’s an example of registering a new Factory closure."}],"type":"paragraph"},{"syntax":"swift","code":["container.service.register {","    SomeService()","}"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"This is how default functionality is overridden in order to change the nature of the system at runtime, and is the primary mechanism"},{"type":"text","text":" "},{"type":"text","text":"used to provide mocks and testing doubles."}],"type":"paragraph"},{"inlineContent":[{"text":"Registration “overrides” are stored in the associated container. If the container ever goes out of scope, so","type":"text"},{"text":" ","type":"text"},{"text":"will all of its registrations.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The original factory closure is preserved, and may be restored by resetting the Factory to its original state."}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"factory: A new factory closure that produces an object of the desired type when needed."},{"type":"text","text":" "},{"type":"text","text":"Allows updating registered factory and scope."}],"type":"paragraph"}]}],"type":"unorderedList"}],"kind":"content"}],"references":{"doc://FactoryKit/documentation/FactoryKit/Factory/register(factory:)":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/register(factory:)","url":"\/documentation\/factorykit\/factory\/register(factory:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"factory","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit04VoidA4Typea","text":"VoidFactoryType","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"register(factory:)","role":"symbol","abstract":[{"type":"text","text":"Registers a new factory closure capable of producing an object or service of the desired type."}],"type":"topic","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/VoidFactoryType":{"kind":"symbol","role":"symbol","title":"VoidFactoryType","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/VoidFactoryType","navigatorTitle":[{"text":"VoidFactoryType","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"VoidFactoryType","kind":"identifier"}],"url":"\/documentation\/factorykit\/voidfactorytype","abstract":[]},"doc://FactoryKit/documentation/FactoryKit/Factory":{"url":"\/documentation\/factorykit\/factory","title":"Factory","type":"topic","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"kind":"symbol","abstract":[{"text":"A Factory manages the dependency injection process for a specific object or service.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Factory"}]}}}