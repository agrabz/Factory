{"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/shared","interfaceLanguage":"swift"},"sections":[],"variants":[{"paths":["\/documentation\/factorykit\/factory\/shared"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"symbolKind":"property","modules":[{"name":"FactoryKit"}],"extendedModule":"FactoryKit","role":"symbol","title":"shared","externalID":"s:10FactoryKit0A9ModifyingPAAE6sharedxvp::SYNTHESIZED::s:10FactoryKit0A0V"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .shared","}"],"syntax":"swift"}]}],"kind":"symbol","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class"},{"type":"text","text":"."}],"references":{"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"role":"symbol","title":"Scope.Shared","url":"\/documentation\/factorykit\/scope\/shared-swift.class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/Factory/shared":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory\/shared","kind":"symbol","abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be shared. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","type":"reference"},{"text":".","type":"text"}],"role":"symbol","title":"shared","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"url":"\/documentation\/factorykit\/factory\/shared"},"doc://FactoryKit/documentation/FactoryKit/Factory":{"kind":"symbol","url":"\/documentation\/factorykit\/factory","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Factory","type":"topic","abstract":[{"type":"text","text":"A Factory manages the dependency injection process for a specific object or service."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Factory"}],"navigatorTitle":[{"kind":"identifier","text":"Factory"}],"title":"Factory"}}}