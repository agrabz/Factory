{"metadata":{"navigatorTitle":[{"text":"Cached","kind":"identifier"}],"externalID":"s:10FactoryKit5ScopeC6CachedC","title":"Scope.Cached","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Cached","kind":"identifier"}],"role":"symbol","extendedModule":"FactoryKit","roleHeading":"Class","modules":[{"name":"FactoryKit"}],"symbolKind":"class"},"schemaVersion":{"minor":3,"patch":0,"major":0},"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class\/init()"],"anchor":"Initializers"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/scope\/cached-swift.class"]}],"sections":[],"abstract":[{"text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}],"platforms":["macOS"]}],"kind":"declarations"}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope"],"kind":"relationships"},{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"kind":"relationships"}],"seeAlsoSections":[{"title":"Scope Class Definitions","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"anchor":"Scope-Class-Definitions"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope"]]},"references":{"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class":{"abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"navigatorTitle":[{"kind":"identifier","text":"Cached"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/factorykit\/scope\/cached-swift.class","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}],"title":"Scope.Cached"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/scope\/singleton-swift.class","role":"symbol","title":"Scope.Singleton","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"navigatorTitle":[{"text":"Singleton","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/Scope":{"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factorykit\/scope","type":"topic","role":"symbol","title":"Scope","kind":"symbol","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Graph-swift.class":{"title":"Scope.Graph","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"navigatorTitle":[{"kind":"identifier","text":"Graph"}],"type":"topic","url":"\/documentation\/factorykit\/scope\/graph-swift.class","abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class/init()":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"url":"\/documentation\/factorykit\/scope\/cached-swift.class\/init()","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class\/init()","title":"init()","type":"topic","abstract":[],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"kind":"symbol","url":"\/documentation\/factorykit\/scope\/shared-swift.class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"title":"Scope.Shared"},"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"}}}