{"sections":[],"metadata":{"externalID":"s:10FactoryKit5ScopeC9SingletonC5cloneAEyF","role":"symbol","title":"clone()","roleHeading":"Instance Method","modules":[{"name":"FactoryKit"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clone","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Scope","preciseIdentifier":"s:10FactoryKit5ScopeC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Singleton","preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC","kind":"typeIdentifier"}],"symbolKind":"method"},"abstract":[{"type":"text","text":"For testing"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/scope\/singleton-swift.class\/clone()"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"clone","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","text":"Scope","preciseIdentifier":"s:10FactoryKit5ScopeC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","text":"Singleton","preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC","kind":"typeIdentifier"}]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class\/clone()"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://FactoryKit/documentation/FactoryKit/Scope":{"url":"\/documentation\/factorykit\/scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","title":"Scope","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class/clone()":{"role":"symbol","url":"\/documentation\/factorykit\/scope\/singleton-swift.class\/clone()","kind":"symbol","title":"clone()","abstract":[{"text":"For testing","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clone"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC","text":"Singleton"}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class\/clone()"},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"role":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"title":"Scope.Singleton","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"navigatorTitle":[{"text":"Singleton","kind":"identifier"}],"url":"\/documentation\/factorykit\/scope\/singleton-swift.class"}}}