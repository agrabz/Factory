{"variants":[{"paths":["\/documentation\/factorykit\/scope\/shared-swift.class"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"roleHeading":"Class","modules":[{"name":"FactoryKit"}],"title":"Scope.Shared","externalID":"s:10FactoryKit5ScopeC6SharedC","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"symbolKind":"class","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"extendedModule":"FactoryKit","role":"symbol"},"sections":[],"seeAlsoSections":[{"title":"Scope Class Definitions","anchor":"Scope-Class-Definitions","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","topicSections":[{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class\/init()"],"generated":true}],"relationshipsSections":[{"title":"Inherits From","type":"inheritsFrom","kind":"relationships","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope"]},{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/FactoryKit\/s8SendableP"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class"},"abstract":[{"type":"text","text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference."}],"references":{"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/scope\/singleton-swift.class","role":"symbol","title":"Scope.Singleton","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"navigatorTitle":[{"text":"Singleton","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class":{"abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"navigatorTitle":[{"kind":"identifier","text":"Cached"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/factorykit\/scope\/cached-swift.class","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}],"title":"Scope.Cached"},"doc://FactoryKit/documentation/FactoryKit/Scope":{"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factorykit\/scope","type":"topic","role":"symbol","title":"Scope","kind":"symbol","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class/init()":{"abstract":[],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class\/init()","kind":"symbol","type":"topic","title":"init()","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/factorykit\/scope\/shared-swift.class\/init()"},"doc://FactoryKit/documentation/FactoryKit/Scope/Graph-swift.class":{"title":"Scope.Graph","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"navigatorTitle":[{"kind":"identifier","text":"Graph"}],"type":"topic","url":"\/documentation\/factorykit\/scope\/graph-swift.class","abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"kind":"symbol","url":"\/documentation\/factorykit\/scope\/shared-swift.class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"title":"Scope.Shared"},"doc://FactoryKit/s8SendableP":{"identifier":"doc:\/\/FactoryKit\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"}}}