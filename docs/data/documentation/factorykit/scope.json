{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"When a scope is associated with a Factory the first time the dependency is resolved a reference to that object","type":"text"},{"text":" ","type":"text"},{"text":"is cached. The next time that Factory is resolved a reference to the originally cached object will be returned.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That behavior can vary according to the scope type (e.g. Shared or Graph)"}]},{"type":"codeListing","code":["extension Container {","    var service: Factory<ServiceType> {","        self { MyService() }","            .singleton","    }","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"Scopes work hand in hand with Containers to managed object lifecycles. If the container ever goes our of scope, so","type":"text"},{"text":" ","type":"text"},{"text":"will all of its cached references.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If no scope is associated with a given Factory then the scope is considered to be unique and a new instance"},{"type":"text","text":" "},{"type":"text","text":"of the dependency will be created each and every time that factory is resolved."}]},{"type":"paragraph","inlineContent":[{"text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms","type":"text"}]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"topicSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"generated":true,"anchor":"Classes","title":"Classes"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/$singleton","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/cached-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/graph-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/shared-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/singleton-swift.type.property","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/unique"],"generated":true,"anchor":"Type-Properties","title":"Type Properties"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"title":"Inherited By","type":"inheritedBy"},{"kind":"relationships","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class"],"generated":true,"anchor":"Scope-Class-Definitions","title":"Scope Class Definitions"}],"metadata":{"roleHeading":"Class","externalID":"s:10FactoryKit5ScopeC","navigatorTitle":[{"kind":"identifier","text":"Scope"}],"title":"Scope","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"symbolKind":"class","modules":[{"name":"FactoryKit"}]},"variants":[{"paths":["\/documentation\/factorykit\/scope"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"kind":"symbol","references":{"doc://FactoryKit/documentation/FactoryKit/Scope/Shared-swift.class":{"kind":"symbol","url":"\/documentation\/factorykit\/scope\/shared-swift.class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Shared","kind":"identifier"}],"type":"topic","role":"symbol","navigatorTitle":[{"text":"Shared","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Shared-swift.class","abstract":[{"text":"Defines a shared (weak) scope. The same instance will be returned by the factory as long as someone maintains a strong reference.","type":"text"}],"title":"Scope.Shared"},"doc://FactoryKit/documentation/FactoryKit/Scope/Graph-swift.class":{"title":"Scope.Graph","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Graph-swift.class","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Graph"}],"navigatorTitle":[{"kind":"identifier","text":"Graph"}],"type":"topic","url":"\/documentation\/factorykit\/scope\/graph-swift.class","abstract":[{"text":"Defines the graph scope. A single instance of a given type will be returned during a given resolution cycle.","type":"text"}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/shared-swift.type.property":{"kind":"symbol","url":"\/documentation\/factorykit\/scope\/shared-swift.type.property","title":"shared","role":"symbol","abstract":[{"type":"text","text":"A reference to the default shared scope manager."}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/shared-swift.type.property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"shared"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Scope","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Shared","preciseIdentifier":"s:10FactoryKit5ScopeC6SharedC"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/singleton-swift.type.property":{"url":"\/documentation\/factorykit\/scope\/singleton-swift.type.property","title":"singleton","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"text":".","kind":"text"},{"text":"Singleton","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC"}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/singleton-swift.type.property","abstract":[],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope/unique":{"abstract":[{"type":"text","text":"A reference to the default unique scope."}],"kind":"symbol","url":"\/documentation\/factorykit\/scope\/unique","role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"unique","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/unique"},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Scope/graph-swift.type.property":{"title":"graph","abstract":[{"type":"text","text":"A reference to the default graph scope manager."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"graph"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC5GraphC","text":"Graph"}],"url":"\/documentation\/factorykit\/scope\/graph-swift.type.property","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/graph-swift.type.property","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/Scope":{"navigatorTitle":[{"kind":"identifier","text":"Scope"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scope"}],"url":"\/documentation\/factorykit\/scope","type":"topic","role":"symbol","title":"Scope","kind":"symbol","abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"code":"Cached","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Graph","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Shared","type":"codeVoice"},{"text":".","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/cached-swift.type.property":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/cached-swift.type.property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"cached"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC6CachedC","text":"Cached"}],"role":"symbol","type":"topic","url":"\/documentation\/factorykit\/scope\/cached-swift.type.property","title":"cached","kind":"symbol","abstract":[{"text":"A reference to the default cached scope manager.","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/scope\/singleton-swift.class","role":"symbol","title":"Scope.Singleton","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"navigatorTitle":[{"text":"Singleton","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Cached-swift.class":{"abstract":[{"type":"text","text":"Defines a cached scope. The same instance will be returned by the factory until the cache is reset."}],"navigatorTitle":[{"kind":"identifier","text":"Cached"}],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/factorykit\/scope\/cached-swift.class","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Cached-swift.class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Cached"}],"title":"Scope.Cached"},"doc://FactoryKit/documentation/FactoryKit/Scope/$singleton":{"kind":"symbol","title":"$singleton","url":"\/documentation\/factorykit\/scope\/$singleton","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"$singleton"},{"kind":"text","text":": "},{"preciseIdentifier":"s:12_Concurrency9TaskLocalC","kind":"typeIdentifier","text":"TaskLocal"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:10FactoryKit5ScopeC","kind":"typeIdentifier","text":"Scope"},{"kind":"text","text":"."},{"preciseIdentifier":"s:10FactoryKit5ScopeC9SingletonC","kind":"typeIdentifier","text":"Singleton"},{"text":">","kind":"text"}],"abstract":[],"type":"topic","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/$singleton"},"doc://FactoryKit/s8SendableP":{"identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"}}}