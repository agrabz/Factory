{"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"modules":[{"name":"FactoryKit"}],"roleHeading":"Instance Method","role":"symbol","symbolKind":"method","title":"preview(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preview","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"EmptyView","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9EmptyViewV"}],"extendedModule":"FactoryKit","externalID":"s:10FactoryKit15SharedContainerPAAE7previewy7SwiftUI9EmptyViewVyxXEF"},"abstract":[{"text":"Defines a preview convenience function to allow easy container transformations in SwiftUI Previews.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.method"},"variants":[{"paths":["\/documentation\/factorykit\/sharedcontainer\/preview(_:)-swift.method"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"]]},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preview","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7SwiftUI9EmptyViewV","kind":"typeIdentifier","text":"EmptyView"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"syntax":"swift","code":["#Preview {","    Container.shared.preview {","        $0.requestUsers.register { MockAsyncRequest { User.mockUsers } }","    }","    MainView()","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Without it you’d need something like…"}]},{"syntax":"swift","code":["#Preview {","    let _ = Container.shared.with {","        $0.requestUsers.register { MockAsyncRequest { User.mockUsers } }","    }","    MainView()","}"],"type":"codeListing"}]}],"references":{"doc://FactoryKit/documentation/FactoryKit/SharedContainer/preview(_:)-swift.method":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preview","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"EmptyView","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI9EmptyViewV"}],"type":"topic","kind":"symbol","role":"symbol","title":"preview(_:)","abstract":[{"type":"text","text":"Defines a preview convenience function to allow easy container transformations in SwiftUI Previews."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer\/preview(_:)-swift.method","url":"\/documentation\/factorykit\/sharedcontainer\/preview(_:)-swift.method"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","url":"\/documentation\/factorykit\/sharedcontainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"type":"topic","title":"SharedContainer","kind":"symbol"}}}