{"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This can come in handy when you need to perform some sort of cleanup, but you don’t want to resolve","type":"text"},{"text":" ","type":"text"},{"text":"the property wrapper instance if it hasn’t already been resolved.","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["deinit {","    $myService.resolvedOrNil()?.cleanup()","}"]}],"kind":"content"}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolvedOrNil","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"resolvedOrNil()","modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit16WeakLazyInjectedV13resolvedOrNilxSgyF","roleHeading":"Instance Method","symbolKind":"method"},"sections":[],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/factorykit\/weaklazyinjected\/resolvedornil()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Projected function returns resolved instance if it exists.","type":"text"}],"references":{"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/resolvedOrNil()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"url":"\/documentation\/factorykit\/weaklazyinjected\/resolvedornil()","title":"resolvedOrNil()","abstract":[{"type":"text","text":"Projected function returns resolved instance if it exists."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()","kind":"symbol","type":"topic","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"url":"\/documentation\/factorykit\/weaklazyinjected","title":"WeakLazyInjected","navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"type":"topic"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"}}}