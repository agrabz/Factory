{"sections":[],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/wrappedValue","interfaceLanguage":"swift"},"metadata":{"roleHeading":"Instance Property","modules":[{"name":"FactoryKit"}],"title":"wrappedValue","symbolKind":"property","externalID":"s:10FactoryKit16WeakLazyInjectedV12wrappedValuexSgvp","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol"},"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/weaklazyinjected\/wrappedvalue"]}],"abstract":[{"text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"? { ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"text":" }","kind":"text"}],"platforms":["macOS"]}],"kind":"declarations"}],"references":{"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/wrappedValue":{"kind":"symbol","title":"wrappedValue","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/wrappedValue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"url":"\/documentation\/factorykit\/weaklazyinjected\/wrappedvalue","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"url":"\/documentation\/factorykit\/weaklazyinjected","title":"WeakLazyInjected","navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"type":"topic"}}}