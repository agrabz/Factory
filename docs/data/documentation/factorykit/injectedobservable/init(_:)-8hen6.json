{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"metadata":{"symbolKind":"init","externalID":"s:10FactoryKit18InjectedObservableVyACyxGxyXAcfc","title":"init(_:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":[{"deprecated":false,"beta":false,"introducedAt":"17.0","name":"iOS","unavailable":false},{"deprecated":false,"beta":false,"introducedAt":"14.0","name":"macOS","unavailable":false},{"deprecated":false,"beta":false,"introducedAt":"17.0","name":"tvOS","unavailable":false},{"deprecated":false,"beta":false,"introducedAt":"10.0","name":"watchOS","unavailable":false}],"roleHeading":"Initializer","modules":[{"name":"FactoryKit"}],"conformance":{"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Observable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"extendedModule":"FactoryKit","role":"symbol"},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"text":"MainActor","preciseIdentifier":"s:ScM","kind":"attribute"},{"text":" ","kind":"text"},{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"wrappedValue","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["macOS"]}]},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Still has issue with attempting to pass dependency into existing view when existing InjectedObject has keyPath."},{"type":"text","text":" "},{"type":"text","text":"https:\/\/forums.swift.org\/t\/allow-property-wrappers-with-multiple-arguments-to-defer-initialization-when-wrappedvalue-is-not-specified"}]}],"kind":"content"}],"references":{"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable":{"abstract":[{"text":"A property wrapper that injects an Observable dependency into a SwiftUI view.","type":"text"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"InjectedObservable","kind":"identifier"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable","url":"\/documentation\/factorykit\/injectedobservable","title":"InjectedObservable","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InjectedObservable","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/InjectedObservable/init(_:)-8hen6":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"attribute","text":"@autoclosure "},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"url":"\/documentation\/factorykit\/injectedobservable\/init(_:)-8hen6","abstract":[{"type":"text","text":"Simple initializer with passed parameter bypassing injection."}],"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"T","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Observable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"init(_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/InjectedObservable\/init(_:)-8hen6","type":"topic","kind":"symbol"}}}