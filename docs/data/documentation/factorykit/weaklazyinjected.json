{"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"attribute","text":"@propertyWrapper"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WeakLazyInjected"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This wrapper maintains a weak reference to the object in question, so it must exist elsewhere.","type":"text"},{"text":" ","type":"text"},{"text":"It’s useful for delegate patterns and parent\/child relationships.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Property wrappers implement an annotation pattern to resolving dependencies, similar to using","type":"text"},{"text":" ","type":"text"},{"text":"EnvironmentObject in SwiftUI.","type":"text"}]},{"syntax":"swift","code":["class MyViewModel {","   @LazyInjected(\\.myService) var service1","   @LazyInjected(\\MyCustomContainer.myService) var service2","}"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"The provided keypath resolves to a Factory definition on the ","type":"text"},{"type":"codeVoice","code":"shared"},{"text":" container required for each Container type.","type":"text"},{"text":" ","type":"text"},{"text":"The short version of the keyPath resolves to the default container, while the expanded version","type":"text"},{"text":" ","type":"text"},{"text":"allows you to point an instance of your own custom container type.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Lazy injection is resolved the first time the dependency is referenced by the code, ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"strong"},{"text":" on initialization.","type":"text"}]}],"style":"note","type":"aside","name":"Note"}],"kind":"content"}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"kind":"relationships"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"title":"WeakLazyInjected","role":"symbol","modules":[{"name":"FactoryKit"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"externalID":"s:10FactoryKit16WeakLazyInjectedV","roleHeading":"Structure","navigatorTitle":[{"kind":"identifier","text":"WeakLazyInjected"}],"symbolKind":"struct"},"variants":[{"paths":["\/documentation\/factorykit\/weaklazyinjected"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected"},"abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"topicSections":[{"title":"Initializers","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-24jhl","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-713tk"],"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/factory","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/projectedValue","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/wrappedValue"],"anchor":"Instance-Properties"},{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolve(reset:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()"],"anchor":"Instance-Methods"}],"references":{"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/init(_:)-713tk":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-713tk","abstract":[{"text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time.","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s7KeyPathC","text":"KeyPath","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:10FactoryKit9ContainerC","text":"Container","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"type":"topic","title":"init(_:)","kind":"symbol","url":"\/documentation\/factorykit\/weaklazyinjected\/init(_:)-713tk"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/wrappedValue":{"kind":"symbol","title":"wrappedValue","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/wrappedValue","type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappedValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Manages the wrapped dependency, which is resolved when this value is accessed for the first time."}],"url":"\/documentation\/factorykit\/weaklazyinjected\/wrappedvalue","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/projectedValue":{"title":"projectedValue","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"projectedValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"WeakLazyInjected","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit16WeakLazyInjectedV"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/weaklazyinjected\/projectedvalue","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/projectedValue","abstract":[{"type":"text","text":"Unwraps the property wrapper granting access to the resolve\/reset function."}]},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WeakLazyInjected","kind":"identifier"}],"url":"\/documentation\/factorykit\/weaklazyinjected","title":"WeakLazyInjected","navigatorTitle":[{"text":"WeakLazyInjected","kind":"identifier"}],"abstract":[{"text":"Convenience property wrapper takes a factory and resolves a weak instance of the desired type the first time the wrapped value is requested.","type":"text"}],"type":"topic"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/factory":{"title":"factory","kind":"symbol","abstract":[{"text":"Grants access to the internal Factory.","type":"text"}],"role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"factory","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/factorykit\/weaklazyinjected\/factory","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/factory"},"doc://FactoryKit/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/init(_:)-24jhl":{"title":"init(_:)","kind":"symbol","abstract":[{"text":"Initializes the property wrapper. The dependency isn’t resolved until the wrapped value is accessed for the first time.","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"KeyPath","kind":"typeIdentifier","preciseIdentifier":"s:s7KeyPathC"},{"text":"<","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">>)","kind":"text"}],"url":"\/documentation\/factorykit\/weaklazyinjected\/init(_:)-24jhl","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/init(_:)-24jhl"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/resolvedOrNil()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"resolvedOrNil"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"url":"\/documentation\/factorykit\/weaklazyinjected\/resolvedornil()","title":"resolvedOrNil()","abstract":[{"type":"text","text":"Projected function returns resolved instance if it exists."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolvedOrNil()","kind":"symbol","type":"topic","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/WeakLazyInjected/resolve(reset:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"resolve","kind":"identifier"},{"text":"(","kind":"text"},{"text":"reset","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/factorykit\/weaklazyinjected\/resolve(reset:)","title":"resolve(reset:)","abstract":[{"type":"text","text":"Allows the user to force a Factory resolution at their discretion."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/WeakLazyInjected\/resolve(reset:)","kind":"symbol","type":"topic","role":"symbol"}}}