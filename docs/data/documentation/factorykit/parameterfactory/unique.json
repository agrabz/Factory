{"metadata":{"externalID":"s:10FactoryKit0A9ModifyingPAAE6uniquexvp::SYNTHESIZED::s:10FactoryKit09ParameterA0V","modules":[{"name":"FactoryKit"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"extendedModule":"FactoryKit","roleHeading":"Instance Property","role":"symbol","title":"unique","symbolKind":"property"},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unique","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .unique","}"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"While you can add the modifier, Factoryâ€™s are unique by default."}]}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Syntactic sugar defines defines unique scope. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/parameterfactory\/unique"]}],"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/unique","interfaceLanguage":"swift"},"references":{"doc://FactoryKit/documentation/FactoryKit/Scope":{"url":"\/documentation\/factorykit\/scope","navigatorTitle":[{"text":"Scope","kind":"identifier"}],"abstract":[{"type":"text","text":"Scopes are used to define the lifetime of resolved dependencies. Factory provides several scope types,"},{"type":"text","text":" "},{"type":"text","text":"including "},{"type":"codeVoice","code":"Singleton"},{"type":"text","text":", "},{"type":"codeVoice","code":"Cached"},{"type":"text","text":", "},{"type":"codeVoice","code":"Graph"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Shared"},{"type":"text","text":"."}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","title":"Scope","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Scope","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory":{"kind":"symbol","title":"ParameterFactory","navigatorTitle":[{"kind":"identifier","text":"ParameterFactory"}],"url":"\/documentation\/factorykit\/parameterfactory","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParameterFactory"}],"role":"symbol","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory/unique":{"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/factorykit\/parameterfactory\/unique","title":"unique","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"unique"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/unique","abstract":[{"text":"Syntactic sugar defines defines unique scope. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope","type":"reference"},{"text":".","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"}}}