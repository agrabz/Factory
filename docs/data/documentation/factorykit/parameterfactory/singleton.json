{"variants":[{"paths":["\/documentation\/factorykit\/parameterfactory\/singleton"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/singleton"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"codeListing","code":["var service: Factory<ServiceType> {","    self { MyService() }","        .singleton","}"],"syntax":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory"]]},"metadata":{"roleHeading":"Instance Property","externalID":"s:10FactoryKit0A9ModifyingPAAE9singletonxvp::SYNTHESIZED::s:10FactoryKit09ParameterA0V","role":"symbol","title":"singleton","extendedModule":"FactoryKit","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"singleton","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"modules":[{"name":"FactoryKit"}]},"sections":[],"abstract":[{"text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://FactoryKit/documentation/FactoryKit/ParameterFactory":{"navigatorTitle":[{"text":"ParameterFactory","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Factory capable of taking parameters at runtime","type":"text"}],"title":"ParameterFactory","url":"\/documentation\/factorykit\/parameterfactory","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParameterFactory","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/Scope/Singleton-swift.class":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Singleton","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/scope\/singleton-swift.class","role":"symbol","title":"Scope.Singleton","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","abstract":[{"text":"Defines the singleton scope. The same instance will always be returned by the factory.","type":"text"}],"navigatorTitle":[{"text":"Singleton","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/ParameterFactory/singleton":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ParameterFactory\/singleton","type":"topic","url":"\/documentation\/factorykit\/parameterfactory\/singleton","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"singleton"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"}],"title":"singleton","abstract":[{"type":"text","text":"Syntactic sugar defines this Factory’s dependency scope to be singleton. See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Scope\/Singleton-swift.class","isActive":true},{"type":"text","text":"."}],"kind":"symbol","role":"symbol"}}}