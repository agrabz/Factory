{"metadata":{"title":"ManagedContainer","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}],"externalID":"s:10FactoryKit16ManagedContainerP","modules":[{"name":"FactoryKit"}]},"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"relationshipsSections":[{"identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"],"type":"inheritedBy","title":"Inherited By","kind":"relationships"},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"],"type":"conformingTypes","title":"Conforming Types","kind":"relationships"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"anchor":"Instance-Properties","title":"Instance Properties","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager"]},{"anchor":"Instance-Methods","title":"Instance Methods","generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5savv","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-6sobf","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-n9wn"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"},{"text":" : AnyObject, ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"If a container only supports ManagedContainer then the container must be instantiated and passed as an instance. Hereâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"an example of passing such a container to a view model for dependency resolution.","type":"text"}]},{"code":["class ContentViewModel {","    let service: MyServiceType","    init(container: Container) {","        service = container.service()","    }","}"],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","isActive":true},{"type":"text","text":" for more information."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/managedcontainer"]}],"sections":[],"references":{"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit/Containers":{"url":"\/documentation\/factorykit\/containers","kind":"article","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","role":"article","title":"Containers","abstract":[{"type":"text","text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?"}],"type":"topic"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-6sobf":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"callAsFunction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"VoidFactoryType","preciseIdentifier":"s:10FactoryKit04VoidA4Typea","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-6sobf","url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-6sobf","role":"symbol","kind":"symbol","abstract":[{"text":"Syntactic sugar allows container to create a properly bound Factory.","type":"text"}],"title":"callAsFunction(key:_:)"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"navigatorTitle":[{"kind":"identifier","text":"SharedContainer"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SharedContainer"}],"url":"\/documentation\/factorykit\/sharedcontainer","type":"topic","abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"kind":"symbol","title":"SharedContainer"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/reset(options:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"reset(options:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)","url":"\/documentation\/factorykit\/managedcontainer\/reset(options:)","abstract":[{"type":"text","text":"Defines a thread safe access mechanism to reset the container."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-777bk":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-777bk","type":"topic","kind":"symbol","title":"with(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Defines a with function to allow container transformation on assignment."}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/manager":{"url":"\/documentation\/factorykit\/managedcontainer\/manager","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"manager","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ContainerManager","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit16ContainerManagerC"}],"abstract":[{"type":"text","text":"Defines the ContainerManager used to manage registrations, resolutions, and scope caching for that container. Encapsulating the code in"},{"type":"text","text":" "},{"type":"text","text":"this fashion makes creating and using your own custom containers much simpler."}],"role":"symbol","type":"topic","title":"manager","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager","required":true},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/Container":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Container"}],"url":"\/documentation\/factorykit\/container","title":"Container","type":"topic","abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Container"}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/decorator(_:)":{"type":"topic","title":"decorator(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decorator","kind":"identifier"},{"text":"(((","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ())?)","kind":"text"}],"url":"\/documentation\/factorykit\/managedcontainer\/decorator(_:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-5savv":{"url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-5savv","type":"topic","kind":"symbol","title":"callAsFunction(key:_:)","role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5savv","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound ParameterFactory."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"preciseIdentifier":"s:10FactoryKit09ParameterA4Typea","kind":"typeIdentifier","text":"ParameterFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:10FactoryKit09ParameterA0V","kind":"typeIdentifier","text":"ParameterFactory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-n9wn":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-n9wn","title":"with(_:)","abstract":[{"text":"Defines an async with function to allow container transformation on assignment.","type":"text"}],"type":"topic","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-n9wn"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-4mfii":{"url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-4mfii","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii","kind":"symbol","title":"promised(key:file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"ParameterFactory","preciseIdentifier":"s:10FactoryKit09ParameterA0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"type":"topic","role":"symbol","abstract":[{"text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution.","type":"text"}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-1lq85":{"title":"promised(key:file:line:)","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promised","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UInt","kind":"typeIdentifier","preciseIdentifier":"s:Su"},{"text":") -> ","kind":"text"},{"text":"Factory","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?>","kind":"text"}],"kind":"symbol","abstract":[{"text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution.","type":"text"}],"url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","title":"ManagedContainer","role":"symbol","abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedContainer"}],"navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"kind":"symbol","url":"\/documentation\/factorykit\/managedcontainer","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/Resolving":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resolving","kind":"identifier"}],"url":"\/documentation\/factorykit\/resolving","navigatorTitle":[{"text":"Resolving","kind":"identifier"}],"role":"symbol","abstract":[{"text":"When protocol is applied to a container it enables a typed registration\/resolution mode.","type":"text"}],"type":"topic","kind":"symbol","title":"Resolving"}}}