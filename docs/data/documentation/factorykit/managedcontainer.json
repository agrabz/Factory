{"sections":[],"abstract":[{"type":"text","text":"ManagedContainer defines the core protocol all Containers must adopt."}],"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager"],"anchor":"Instance-Properties","generated":true},{"title":"Instance Methods","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5savv","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-6sobf","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-n9wn"],"anchor":"Instance-Methods","generated":true}],"kind":"symbol","variants":[{"paths":["\/documentation\/factorykit\/managedcontainer"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/FactoryKit\/s8SendableP"]},{"type":"inheritedBy","kind":"relationships","title":"Inherited By","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer"]},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"role":"symbol","externalID":"s:10FactoryKit16ManagedContainerP","navigatorTitle":[{"kind":"identifier","text":"ManagedContainer"}],"modules":[{"name":"FactoryKit"}],"title":"ManagedContainer","symbolKind":"protocol"},"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"},{"text":" : AnyObject, ","kind":"text"},{"preciseIdentifier":"s:s8SendableP","text":"Sendable","kind":"typeIdentifier"}]}]},{"kind":"content","content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"If a container only supports ManagedContainer then the container must be instantiated and passed as an instance. Hereâ€™s"},{"type":"text","text":" "},{"type":"text","text":"an example of passing such a container to a view model for dependency resolution."}]},{"type":"codeListing","syntax":"swift","code":["class ContentViewModel {","    let service: MyServiceType","    init(container: Container) {","        service = container.service()","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers","isActive":true},{"type":"text","text":" for more information."}]}]}],"references":{"doc://FactoryKit/documentation/FactoryKit/Container":{"abstract":[{"type":"text","text":"This is the default Container provided for your convenience by Factory."}],"kind":"symbol","navigatorTitle":[{"text":"Container","kind":"identifier"}],"type":"topic","url":"\/documentation\/factorykit\/container","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Container","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Container","kind":"identifier"}],"role":"symbol","title":"Container"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-777bk":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-777bk","kind":"symbol","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-777bk","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"with"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"type":"topic","role":"symbol","abstract":[{"text":"Defines a with function to allow container transformation on assignment.","type":"text"}],"title":"with(_:)"},"doc://FactoryKit/documentation/FactoryKit/Resolving":{"abstract":[{"text":"When protocol is applied to a container it enables a typed registration\/resolution mode.","type":"text"}],"title":"Resolving","navigatorTitle":[{"text":"Resolving","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Resolving","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Resolving","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/factorykit\/resolving"},"doc://FactoryKit/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/with(_:)-n9wn":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/with(_:)-n9wn","abstract":[{"text":"Defines an async with function to allow container transformation on assignment.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"with","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","title":"with(_:)","url":"\/documentation\/factorykit\/managedcontainer\/with(_:)-n9wn"},"doc://FactoryKit/documentation/FactoryKit/SharedContainer":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/SharedContainer","url":"\/documentation\/factorykit\/sharedcontainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SharedContainer","kind":"identifier"}],"abstract":[{"text":"SharedContainer defines the protocol all Containers must adopt if they want to support Service Locator style injection or support any of the injection property wrappers.","type":"text"}],"navigatorTitle":[{"text":"SharedContainer","kind":"identifier"}],"type":"topic","title":"SharedContainer","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-1lq85":{"title":"promised(key:file:line:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Factory","preciseIdentifier":"s:10FactoryKit0A0V"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a factory whose optional registration is promised before resolution."}],"url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-1lq85","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-1lq85"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-5savv":{"kind":"symbol","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-5savv","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"callAsFunction","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"StaticString","preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ParameterFactoryType","preciseIdentifier":"s:10FactoryKit09ParameterA4Typea","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"ParameterFactory","preciseIdentifier":"s:10FactoryKit09ParameterA0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"type":"text","text":"Syntactic sugar allows container to create a properly bound ParameterFactory."}],"role":"symbol","url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-5savv","title":"callAsFunction(key:_:)"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/decorator(_:)":{"title":"decorator(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decorator"},{"kind":"text","text":"((("},{"kind":"keyword","text":"Any"},{"kind":"text","text":") -> ())?)"}],"abstract":[{"type":"text","text":"Defines a decorator for the container. This decorator will see every dependency resolved by this container."}],"url":"\/documentation\/factorykit\/managedcontainer\/decorator(_:)","kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/decorator(_:)"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/manager":{"url":"\/documentation\/factorykit\/managedcontainer\/manager","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/manager","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Defines the ContainerManager used to manage registrations, resolutions, and scope caching for that container. Encapsulating the code in"},{"type":"text","text":" "},{"type":"text","text":"this fashion makes creating and using your own custom containers much simpler."}],"title":"manager","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"manager","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ContainerManager","preciseIdentifier":"s:10FactoryKit16ContainerManagerC","kind":"typeIdentifier"}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer":{"abstract":[{"text":"ManagedContainer defines the core protocol all Containers must adopt.","type":"text"}],"type":"topic","title":"ManagedContainer","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer","url":"\/documentation\/factorykit\/managedcontainer","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedContainer","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"ManagedContainer","kind":"identifier"}]},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/reset(options:)":{"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/reset(options:)","abstract":[{"type":"text","text":"Defines a thread safe access mechanism to reset the container."}],"kind":"symbol","type":"topic","title":"reset(options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","kind":"typeIdentifier","text":"FactoryResetOptions"},{"kind":"text","text":")"}],"url":"\/documentation\/factorykit\/managedcontainer\/reset(options:)"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/promised(key:file:line:)-4mfii":{"type":"topic","url":"\/documentation\/factorykit\/managedcontainer\/promised(key:file:line:)-4mfii","title":"promised(key:file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"promised"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Su","text":"UInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit09ParameterA0V","text":"ParameterFactory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?>"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Syntactic sugar allows container to create a parameter factory whose optional registration is promised before resolution."}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/promised(key:file:line:)-4mfii"},"doc://FactoryKit/documentation/FactoryKit/Containers":{"abstract":[{"type":"text","text":"Containers are the cornerstone of Factory 2.0. What are they and how do we use them?"}],"role":"article","title":"Containers","type":"topic","kind":"article","url":"\/documentation\/factorykit\/containers","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/Containers"},"doc://FactoryKit/documentation/FactoryKit/ManagedContainer/callAsFunction(key:_:)-6sobf":{"title":"callAsFunction(key:_:)","abstract":[{"text":"Syntactic sugar allows container to create a properly bound Factory.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"callAsFunction"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s12StaticStringV","text":"StaticString"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit04VoidA4Typea","text":"VoidFactoryType"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A0V","text":"Factory"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/factorykit\/managedcontainer\/callasfunction(key:_:)-6sobf","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ManagedContainer\/callAsFunction(key:_:)-6sobf","kind":"symbol"}}}