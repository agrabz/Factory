{"topicSections":[{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/init()"],"title":"Initializers","anchor":"Initializers"},{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/defaultScope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/dependencyChainTestMax","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/logger","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/promiseTriggersError","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/trace"],"title":"Instance Properties","anchor":"Instance-Properties"},{"generated":true,"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/pop()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/push()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)"],"title":"Instance Methods","anchor":"Instance-Methods"}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"title":"Conforms To"}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"ContainerManager also implements several functions that can be used to reset the container"},{"type":"text","text":" "},{"type":"text","text":"to a pristine state, as well as push\/pop methods that can save and restore the current state."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Those functions are designed primarily for testing."}],"type":"paragraph"},{"inlineContent":[{"text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/containermanager"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"metadata":{"roleHeading":"Class","modules":[{"name":"FactoryKit"}],"externalID":"s:10FactoryKit16ContainerManagerC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"role":"symbol","title":"ContainerManager"},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}],"references":{"doc://FactoryKit/documentation/FactoryKit/ContainerManager/defaultScope":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultScope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":"?"}],"url":"\/documentation\/factorykit\/containermanager\/defaultscope","abstract":[{"type":"text","text":"Default scope"}],"title":"defaultScope","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/defaultScope","kind":"symbol","role":"symbol","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(options:)":{"role":"symbol","title":"reset(options:)","abstract":[{"text":"Resets the Container to its original state, removing all registrations and clearing all scope caches.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(options:)","url":"\/documentation\/factorykit\/containermanager\/reset(options:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"FactoryResetOptions","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager","type":"topic","kind":"symbol","title":"ContainerManager","abstract":[{"text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"role":"symbol","url":"\/documentation\/factorykit\/containermanager"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/pop()":{"abstract":[{"type":"text","text":"Test function pops and restores a previously pushed registration and cache state"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/pop()","type":"topic","url":"\/documentation\/factorykit\/containermanager\/pop()","kind":"symbol","title":"pop()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pop"},{"kind":"text","text":"()"}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/promiseTriggersError":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/promiseTriggersError","url":"\/documentation\/factorykit\/containermanager\/promisetriggerserror","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promiseTriggersError","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Public variable promise behavior"}],"title":"promiseTriggersError","kind":"symbol","role":"symbol"},"doc://FactoryKit/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/FactoryKit\/s8SendableP","title":"Swift.Sendable"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(scope:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"scope"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC","text":"Scope"},{"kind":"text","text":")"}],"url":"\/documentation\/factorykit\/containermanager\/reset(scope:)","abstract":[{"type":"text","text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact."}],"title":"reset(scope:)","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)","kind":"symbol","role":"symbol","type":"topic"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/logger":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/logger","title":"logger","type":"topic","url":"\/documentation\/factorykit\/containermanager\/logger","kind":"symbol","abstract":[{"type":"text","text":"Public access to logging facility in debug mode for ALL containers."}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/push()":{"url":"\/documentation\/factorykit\/containermanager\/push()","title":"push()","type":"topic","kind":"symbol","abstract":[{"text":"Test function pushes the current registration and cache states","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/push()","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/init()":{"url":"\/documentation\/factorykit\/containermanager\/init()","abstract":[{"text":"Public initializer","type":"text"}],"role":"symbol","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/init()","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/trace":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"trace"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/trace","title":"trace","type":"topic","url":"\/documentation\/factorykit\/containermanager\/trace","kind":"symbol","abstract":[{"type":"text","text":"Public var enabling factory resolution trace statements in debug mode for ALL containers."}]},"doc://FactoryKit/documentation/FactoryKit":{"role":"collection","type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","url":"\/documentation\/factorykit","abstract":[{"text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI.","type":"text"}],"kind":"symbol","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/dependencyChainTestMax":{"type":"topic","url":"\/documentation\/factorykit\/containermanager\/dependencychaintestmax","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/dependencyChainTestMax","kind":"symbol","abstract":[{"type":"text","text":"Public variable exposing dependency chain test maximum"}],"title":"dependencyChainTestMax","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dependencyChainTestMax"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}]}}}