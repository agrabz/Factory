{"abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager"},"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/init()"],"title":"Initializers","anchor":"Initializers","generated":true},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/defaultScope","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/dependencyChainTestMax","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/logger","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/promiseTriggersError","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/trace"],"title":"Instance Properties","anchor":"Instance-Properties","generated":true},{"identifiers":["doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/pop()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/push()","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(options:)","doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)"],"title":"Instance Methods","anchor":"Instance-Methods","generated":true}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/FactoryKit\/s8SendableP"],"type":"conformsTo","title":"Conforms To"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"Every container requires a ContainerManager."}],"type":"paragraph"},{"inlineContent":[{"text":"ContainerManager also implements several functions that can be used to reset the container","type":"text"},{"text":" ","type":"text"},{"text":"to a pristine state, as well as push\/pop methods that can save and restore the current state.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Those functions are designed primarily for testing.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"Class is @unchecked Sendable as all public state is managed via global locking mechanisms","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/factorykit\/containermanager"]}],"hierarchy":{"paths":[["doc:\/\/FactoryKit\/documentation\/FactoryKit"]]},"metadata":{"externalID":"s:10FactoryKit16ContainerManagerC","modules":[{"name":"FactoryKit"}],"title":"ContainerManager","role":"symbol","roleHeading":"Class","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}],"navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}]},"references":{"doc://FactoryKit/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/FactoryKit\/s8SendableP"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/dependencyChainTestMax":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dependencyChainTestMax","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"url":"\/documentation\/factorykit\/containermanager\/dependencychaintestmax","type":"topic","title":"dependencyChainTestMax","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/dependencyChainTestMax","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Public variable exposing dependency chain test maximum"}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(scope:)":{"type":"topic","title":"reset(scope:)","abstract":[{"text":"Clears any cached values associated with a specific scope, leaving the other scope caches intact.","type":"text"}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(scope:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"(","kind":"text"},{"text":"scope","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"text":")","kind":"text"}],"url":"\/documentation\/factorykit\/containermanager\/reset(scope:)"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/reset(options:)":{"type":"topic","abstract":[{"type":"text","text":"Resets the Container to its original state, removing all registrations and clearing all scope caches."}],"kind":"symbol","url":"\/documentation\/factorykit\/containermanager\/reset(options:)","title":"reset(options:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reset"},{"kind":"text","text":"("},{"kind":"externalParam","text":"options"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit0A12ResetOptionsO","text":"FactoryResetOptions"},{"kind":"text","text":")"}],"role":"symbol","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/reset(options:)"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/promiseTriggersError":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"promiseTriggersError","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"title":"promiseTriggersError","abstract":[{"type":"text","text":"Public variable promise behavior"}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/factorykit\/containermanager\/promisetriggerserror","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/promiseTriggersError"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/defaultScope":{"type":"topic","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/defaultScope","title":"defaultScope","url":"\/documentation\/factorykit\/containermanager\/defaultscope","abstract":[{"type":"text","text":"Default scope. Setting scope to nil returns the default to "},{"type":"codeVoice","code":"unique"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultScope","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Scope","kind":"typeIdentifier","preciseIdentifier":"s:10FactoryKit5ScopeC"},{"text":"?","kind":"text"}],"role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager":{"kind":"symbol","abstract":[{"type":"text","text":"ContainerManager manages the registration and scope caching storage mechanisms for a given container."}],"navigatorTitle":[{"kind":"identifier","text":"ContainerManager"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager","role":"symbol","type":"topic","url":"\/documentation\/factorykit\/containermanager","title":"ContainerManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ContainerManager"}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/pop()":{"title":"pop()","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"pop"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"type":"text","text":"Test function pops and restores a previously pushed registration and cache state"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/pop()","url":"\/documentation\/factorykit\/containermanager\/pop()"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/init()":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/init()","title":"init()","abstract":[{"type":"text","text":"Public initializer"}],"type":"topic","url":"\/documentation\/factorykit\/containermanager\/init()","kind":"symbol"},"doc://FactoryKit/documentation/FactoryKit":{"type":"topic","role":"collection","identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit","kind":"symbol","abstract":[{"type":"text","text":"A modern approach to Container-Based Dependency Injection for Swift and SwiftUI."}],"url":"\/documentation\/factorykit","title":"FactoryKit"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/push()":{"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/push()","type":"topic","title":"push()","abstract":[{"type":"text","text":"Test function pushes the current registration and cache states"}],"url":"\/documentation\/factorykit\/containermanager\/push()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"push","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","role":"symbol"},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/logger":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"logger"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/logger","title":"logger","type":"topic","kind":"symbol","url":"\/documentation\/factorykit\/containermanager\/logger","abstract":[{"type":"text","text":"Public access to logging facility in debug mode for ALL containers."}]},"doc://FactoryKit/documentation/FactoryKit/ContainerManager/trace":{"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trace","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/FactoryKit\/documentation\/FactoryKit\/ContainerManager\/trace","kind":"symbol","url":"\/documentation\/factorykit\/containermanager\/trace","abstract":[{"text":"Public var enabling factory resolution trace statements in debug mode for ALL containers.","type":"text"}],"role":"symbol","type":"topic","title":"trace"}}}